import streamlit

from database.read import getExerciseList, getUser
from database.create import createExercise

from helpers.cache_manager import *
from helpers.user_interface import *

from models.user import User
from models.exercise import Exercise


if not streamlit.user.is_logged_in:
    streamlit.switch_page("home.py")

uiSetup()
initSessionState(["user_data"])

streamlit.title("Exercise Creator", anchor=False)
streamlit.write("""
                Create a new exercise with its details, variations, and equipment options. <br>
                Think twice before you add something stupid. <br>
                """, unsafe_allow_html=True)

user_data: User
if streamlit.session_state["user_data"] is None:
    streamlit.session_state["user_data"] = getUser(str(streamlit.user.email))
user_data = streamlit.session_state["user_data"]

if user_data.clearanceLevel < 3:
    streamlit.error("Sorry bruv, you aren't cleared for this stuff.")
    streamlit.stop()

global_exercise_names: list[str] | None = None
global_exercise_list = getExerciseList()

if global_exercise_list is not None:
	global_exercise_names = [exercise.name for exercise in global_exercise_list]
else:
	global_exercise_list = []
	global_exercise_names = []

# Create the new exercise form
with streamlit.form(key="exercise_creator_form", enter_to_submit=False, border=False):
    # Exercise name
    new_name = streamlit.text_input(
        label="Exercise Name",
        placeholder="Enter the name of the new exercise",
        help="The name of the exercise (should be unique)",
        label_visibility="collapsed"
    )
    
    # Exercise category
    categories = ["Strength", "Flexibility", "Stability", "Endurance", "Functional"]
    new_category = streamlit.selectbox(
        label="Category",
        options=categories, 
        index=0,
        help="The primary category this exercise falls under"
    )
    
    # Exercise variations
    streamlit.write("**Exercise Variations** (one per line)")
    variations_text = streamlit.text_area(
        label="Variations",
        placeholder="Enter each variation on a new line\nExample:\nStandard\nWide grip\nNarrow grip",
        help="Enter each variation on a new line",
        height=150,
        label_visibility="collapsed"
    )
    
    # Equipment needed
    streamlit.write("**Equipment Required** (one per line)")
    equipment_text = streamlit.text_area(
        label="Equipment",
        placeholder="Enter each piece of equipment on a new line\nExample:\nBarbell\nDumbbells\nBench",
        help="Enter each piece of equipment on a new line",
        height=150,
        label_visibility="collapsed"
    )
    
    # Form submission
    submit_button = streamlit.form_submit_button(
        label="Create Exercise",
        icon=":material/add:",
        use_container_width=True
    )
    
    if submit_button:
        # Validation
        if not new_name.strip():
            streamlit.error("Exercise name is required!")
        elif new_name.strip() in global_exercise_names:
            streamlit.error("Exercise name already exists! Please choose a different name.")
        else:
            # Parse variations and equipment
            new_variations = [v.strip() for v in variations_text.split('\n') if v.strip()]
            new_equipment = [e.strip() for e in equipment_text.split('\n') if e.strip()]
            
            # Create new exercise object
            new_exercise = Exercise(
                name=new_name.strip(),
                category=new_category,
                variations=new_variations,
                equipment=new_equipment,
                id=""  # Will be generated by the server
            )
            
            # Attempt to create the exercise
            exercise_id = createExercise(new_exercise)
            if exercise_id:
                streamlit.success(f"Exercise '{new_name}' created successfully! ID: {exercise_id}")
                
                # Clear cache to refresh data
                streamlit.cache_data.clear()
                
                # Redirect to viewer page
                streamlit.switch_page("pages/exercise/viewer.py")
            else:
                streamlit.error("Failed to create exercise. Please try again.")


# Quick reference section
with streamlit.expander("Category Guidelines", expanded=False):
    streamlit.markdown("""
    **Strength**: Exercises that focus on building muscle strength and power
    - Examples: Squats, Deadlifts, Bench Press, Pull-ups
    
    **Flexibility**: Exercises that improve range of motion and flexibility
    - Examples: Stretches, Yoga poses, Mobility work
    
    **Stability**: Exercises that improve balance and core stability
    - Examples: Planks, Single-leg stands, Balance board exercises
    
    **Endurance**: Exercises that improve cardiovascular or muscular endurance
    - Examples: Running, Cycling, High-rep bodyweight exercises
    
    **Functional**: Exercises that mimic real-world movement patterns
    - Examples: Farmer's walks, Turkish get-ups, Movement patterns
    """)
